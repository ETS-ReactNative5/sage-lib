<%= sage_component SageButtonGroup, { gap: :sm } do %>
  <%= sage_component SageButton, {
    value: "Toast",
    style: "primary",
    attributes: {
      "onClick": "Sage.toast.trigger({text: 'Toast created.'})",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Danger Toast",
    style: "danger",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.trigger({icon: 'danger', text: 'Danger toast created.', type: 'danger'})",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Custom Timer: 10 Seconds",
    style: "secondary",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.trigger({text: 'This toast has a 10 second timer.', timer: 10000, icon: 'launch'})",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Toast With Link",
    style: "secondary",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.trigger({text: 'Congratulations on your success', link: {text: 'Go to next step', href: 'http://app.kajabi.com'}})",
    },
  } %>
<% end %>

<hr/>

<%= sage_component SageButtonGroup, { gap: :sm } do %>
  <%= sage_component SageButton, {
    value: "Non-Dismissing Toast",
    style: "primary",
    raised: true,
    attributes: {
      "onClick": "let toastId = Sage.toast.trigger({text: 'I will not dismiss via timer', timer: false});
                  document.getElementById('non-dismissing-toast-output-instructions').innerHTML = `
                    <h3>Dismiss toast with:</h3>
                    <br/>
                    <div class='prettyprint'>
                      <code>Sage.toast.dismiss('${toastId}')</code>
                    </div>
                    <br/>
                    <strong>Toast Id:</strong> <code>${toastId}</code>
                  `",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Dismiss All",
    style: "danger",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.dismissAll()",
    },
  } %>
<% end %>

<div id="non-dismissing-toast-output-instructions"></div>

<hr />

<pre class="prettyprint">
  <code>
    // Pattern for a manually dismissable toast:

    // Sage.toast.trigger()
    // -----------------------------------------------------------------------------------------------------
    // Triggers a toast with the arg and returns the unique id of the toast.
    //
    // @param {object} - Toast options, `message` key is required, all others are optional
    // @returns {unique id}
    //
    // Example:
    const myWonderfulToastId = Sage.toast.trigger({text: 'I will not dismiss via timer', timer: false});


    // Sage.toast.dismiss()
    // -----------------------------------------------------------------------------------------------------
    // Dismisses a toast with a unique id.
    //
    // @param {unique id}
    // @returns {boolean} â€“ `false` if no toast of that ID exists, `true` if it does exist and was successfully dismissed
    //
    // Example:
    Sage.toast.dismiss(myWonderfulToastId);
  </code>
</pre>
