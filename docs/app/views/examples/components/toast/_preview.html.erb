<%= sage_component SageButtonGroup, { gap: :sm } do %>
  <%= sage_component SageButton, {
    value: "Toast",
    style: "primary",
    attributes: {
      "onClick": "Sage.toast.trigger({text: 'Toast created.'})",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Danger Toast",
    style: "danger",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.trigger({icon: 'danger', text: 'Danger toast created.', type: 'danger'})",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Custom Timer: 10s",
    style: "secondary",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.trigger({text: 'This toast has a 10 second timer.', timer: 10000, icon: 'launch'})",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Very Long Text",
    style: "secondary",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.trigger({text: 'Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition.'})",
    },
  } %>
<% end %>

<hr/>

<h3>Non-Dismissing Examples:</h3>

<%= sage_component SageButtonGroup, { gap: :sm } do %>
  <%= sage_component SageButton, {
    value: "Example",
    style: "primary",
    raised: true,
    attributes: {
      "onClick": "showDismissInstructions(Sage.toast.trigger({text: 'I will not dismiss via timer', timer: false}))",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Uploading",
    style: "secondary",
    raised: true,
    attributes: {
      "onClick": "showDismissInstructions(Sage.toast.trigger({text: 'Uploading image...', icon: 'upload', timer: false}))",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Toast With Link",
    style: "secondary",
    raised: true,
    attributes: {
      "onClick": "showDismissInstructions(Sage.toast.trigger({text: 'Congratulations on your success', link: {text: 'Go to next step', href: 'http://app.kajabi.com'}, timer: false}))",
    },
  } %>

  <%= sage_component SageButton, {
    value: "Dismiss All (Reset)",
    style: "danger",
    raised: true,
    attributes: {
      "onClick": "Sage.toast.reset()",
    },
  } %>
<% end %>

<script type="text/javascript">
  const showDismissInstructions = (toastId) => {
    document.getElementById('dismiss-instructions').innerHTML = `
      <strong>Toast Id:</strong> <code>${toastId}</code>
      <br/>
      <br/>
      <h4>Dismiss toast with:</h4>
      <br/>
      <div class='prettyprint'>
        <code>Sage.toast.dismiss('${toastId}')</code>
      </div>
      <br/>
      <h4>Dismiss all toasts with:</h4>
      <br/>
      <div class='prettyprint'>
        <code>Sage.toast.reset()</code>
      </div>
    `
  };
</script>
<div id="dismiss-instructions"></div>

<hr />

<pre class="prettyprint">
  <code>
    // Pattern for a manually dismissable toast:

    // Sage.toast.trigger()
    // -----------------------------------------------------------------------------------------------------
    // Triggers a toast with the arg and returns the unique id of the toast.
    //
    // @param {object} - Toast options, `message` key is required, all others are optional
    // @returns {unique id}
    //
    // Example:
    const myWonderfulToastId = Sage.toast.trigger({text: 'I will not dismiss via timer', timer: false});


    // Sage.toast.dismiss()
    // -----------------------------------------------------------------------------------------------------
    // Dismisses a toast with a unique id.
    //
    // @param {unique id}
    // @returns {boolean} â€“ `false` if no toast of that ID exists, `true` if it does exist and was successfully dismissed
    //
    // Example:
    Sage.toast.dismiss(myWonderfulToastId);
  </code>
</pre>
